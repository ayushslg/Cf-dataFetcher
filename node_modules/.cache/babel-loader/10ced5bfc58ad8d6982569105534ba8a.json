{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush\\\\Desktop\\\\Codeforces\\\\codeforces-visulizer-master\\\\src\\\\Components\\\\Charts\\\\Levels.js\";\nimport React from \"react\";\nimport { Chart } from \"react-google-charts\";\n\nclass Levels extends React.Component {\n  render() {\n    const prob = {};\n\n    for (var i = 0; i < this.props.data.length; i++) {\n      const str = this.props.data[i].problem.index.charAt(0);\n\n      if (this.props.data[i].verdict === \"OK\") {\n        if (prob[str] === undefined) {\n          prob[str] = 1;\n        } else ++prob[str];\n      }\n    }\n\n    var titleTextStyle = {\n      fontSize: 18,\n      color: '#393939',\n      bold: false\n    };\n    const data = [[\"Level\", \"Count\"]];\n    const d = [];\n\n    for (var x in prob) {\n      d.push([x, prob[x]]);\n    }\n\n    d.sort();\n\n    for (i = 0; i < d.length; i++) {\n      data.push(d[i]);\n    } // console.log(data)\n\n\n    const len = this.props.data.length;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, len > 0 && /*#__PURE__*/React.createElement(Chart, {\n      width: '100%',\n      height: '300px',\n      className: \"center col s12 z-depth-2\",\n      chartType: \"Bar\",\n      data: data,\n      style: {\n        paddingTop: 20\n      },\n      options: {\n        chartArea: {\n          width: '100%',\n          height: '350'\n        },\n        // Material design options\n        chart: {\n          title: 'Levels of ' + this.props.user,\n          // subtitle: 'Sales, Expenses, and Profit: 2014-2017',\n          legend: \"none\"\n        },\n        bar: {\n          groupWidth: '95%'\n        },\n        legend: {\n          position: 'none'\n        },\n        fontName: 'Roboto',\n        titleTextStyle: titleTextStyle,\n        vAxis: {\n          format: '0'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default Levels;","map":{"version":3,"sources":["C:/Users/Ayush/Desktop/Codeforces/codeforces-visulizer-master/src/Components/Charts/Levels.js"],"names":["React","Chart","Levels","Component","render","prob","i","props","data","length","str","problem","index","charAt","verdict","undefined","titleTextStyle","fontSize","color","bold","d","x","push","sort","len","paddingTop","chartArea","width","height","chart","title","user","legend","bar","groupWidth","position","fontName","vAxis","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,qBAApB;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAoC;AAEhCC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAC,EAAX;;AAEA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAA9B,EAAqCH,CAAC,EAAtC,EAAyC;AACrC,YAAMI,GAAG,GAAE,KAAKH,KAAL,CAAWC,IAAX,CAAgBF,CAAhB,EAAmBK,OAAnB,CAA2BC,KAA3B,CAAiCC,MAAjC,CAAwC,CAAxC,CAAX;;AACA,UAAG,KAAKN,KAAL,CAAWC,IAAX,CAAgBF,CAAhB,EAAmBQ,OAAnB,KAA6B,IAAhC,EAAsC;AAClC,YAAGT,IAAI,CAACK,GAAD,CAAJ,KAAYK,SAAf,EAA0B;AACtBV,UAAAA,IAAI,CAACK,GAAD,CAAJ,GAAU,CAAV;AACH,SAFD,MAGK,EAAEL,IAAI,CAACK,GAAD,CAAN;AACR;AACJ;;AACA,QAAIM,cAAc,GAAG;AACpBC,MAAAA,QAAQ,EAAE,EADU;AAEpBC,MAAAA,KAAK,EAAE,SAFa;AAGpBC,MAAAA,IAAI,EAAE;AAHc,KAArB;AAMD,UAAMX,IAAI,GAAG,CAAC,CAAC,OAAD,EAAS,OAAT,CAAD,CAAb;AACA,UAAMY,CAAC,GAAC,EAAR;;AACA,SAAK,IAAIC,CAAT,IAAchB,IAAd,EAAoB;AAChBe,MAAAA,CAAC,CAACE,IAAF,CAAO,CAACD,CAAD,EAAGhB,IAAI,CAACgB,CAAD,CAAP,CAAP;AACH;;AACDD,IAAAA,CAAC,CAACG,IAAF;;AAEA,SAAIjB,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACc,CAAC,CAACX,MAAZ,EAAmBH,CAAC,EAApB,EAAuB;AACnBE,MAAAA,IAAI,CAACc,IAAL,CAAUF,CAAC,CAACd,CAAD,CAAX;AACH,KA3BI,CA6BL;;;AACA,UAAMkB,GAAG,GAAG,KAAKjB,KAAL,CAAWC,IAAX,CAAgBC,MAA5B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKe,GAAG,GAAG,CAAN,iBACG,oBAAC,KAAD;AACM,MAAA,KAAK,EAAE,MADb;AAEM,MAAA,MAAM,EAAE,OAFd;AAGM,MAAA,SAAS,EAAC,0BAHhB;AAIM,MAAA,SAAS,EAAC,KAJhB;AAKM,MAAA,IAAI,EAAEhB,IALZ;AAMM,MAAA,KAAK,EAAE;AAACiB,QAAAA,UAAU,EAAC;AAAZ,OANb;AAOM,MAAA,OAAO,EAAE;AACLC,QAAAA,SAAS,EAAC;AACIC,UAAAA,KAAK,EAAE,MADX;AAEIC,UAAAA,MAAM,EAAE;AAFZ,SADL;AAKH;AACAC,QAAAA,KAAK,EAAE;AACHC,UAAAA,KAAK,EAAE,eAAc,KAAKvB,KAAL,CAAWwB,IAD7B;AAEH;AACAC,UAAAA,MAAM,EAAC;AAHJ,SANJ;AAWHC,QAAAA,GAAG,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAXF;AAYHF,QAAAA,MAAM,EAAE;AAAEG,UAAAA,QAAQ,EAAE;AAAZ,SAZL;AAaLC,QAAAA,QAAQ,EAAE,QAbL;AAcPpB,QAAAA,cAAc,EAAEA,cAdT;AAePqB,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV;AAfA,OAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CADJ;AAiCH;;AAlE+B;;AAqEpC,eAAepC,MAAf","sourcesContent":["import React from \"react\";\nimport {Chart} from \"react-google-charts\";\n\nclass Levels extends React.Component{\n\n    render() {\n        const prob={\n        };\n        for(var i=0;i<this.props.data.length;i++){\n            const str= this.props.data[i].problem.index.charAt(0);\n            if(this.props.data[i].verdict===\"OK\") {\n                if(prob[str]===undefined) {\n                    prob[str]=1;\n                }\n                else ++prob[str];\n            }\n        }\n         var titleTextStyle = {\n          fontSize: 18,\n          color: '#393939',\n          bold: false\n        };\n\n        const data = [[\"Level\",\"Count\"]];\n        const d=[]\n        for (var x in prob) {\n            d.push([x,prob[x]])\n        }\n        d.sort();\n\n        for(i=0;i<d.length;i++){\n            data.push(d[i])\n        }\n\n        // console.log(data)\n        const len = this.props.data.length;\n        return(\n            <div>\n                {len > 0 &&\n                    <Chart\n                          width={'100%'}\n                          height={'300px'}\n                          className=\"center col s12 z-depth-2\"\n                          chartType=\"Bar\"\n                          data={data}\n                          style={{paddingTop:20}}\n                          options={{\n                              chartArea:{\n                                            width: '100%',\n                                            height: '350',\n                                            },\n                                // Material design options\n                                chart: {\n                                    title: 'Levels of '+ this.props.user,\n                                    // subtitle: 'Sales, Expenses, and Profit: 2014-2017',\n                                    legend:\"none\",\n                                        },\n                                bar: { groupWidth: '95%' },\n                                legend: { position: 'none' },\n                              fontName: 'Roboto',\n                            titleTextStyle: titleTextStyle,\n                            vAxis: { format: '0' },\n\n                          }}\n\n                    />\n                }\n            </div>\n        )\n    }\n\n}\nexport default Levels"]},"metadata":{},"sourceType":"module"}