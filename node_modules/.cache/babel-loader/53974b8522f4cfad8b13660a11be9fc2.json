{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush\\\\Desktop\\\\codeforces-visualiser\\\\src\\\\Components\\\\contest.js\";\nimport React from \"react\";\n\nclass Contest extends React.Component {\n  render() {\n    var best = 1e10;\n    var worst = -1e10;\n    var maxUp = 0;\n    var maxDown = 0;\n    var con_url = 'https://codeforces.com/contest/';\n    this.props.user_data.forEach(function (con) {\n      if (con.rank < best) {\n        best = con.rank;\n      }\n\n      if (con.rank > worst) {\n        worst = con.rank;\n      }\n\n      var ch = con.newRating - con.oldRating;\n\n      if (ch > maxUp) {\n        maxUp = ch;\n      }\n\n      if (ch < maxDown) {\n        maxDown = ch;\n      }\n    });\n    var problems = {};\n\n    for (var i = this.props.data.length - 1; i >= 0; i--) {\n      var sub = this.props.data[i];\n      var problemId = sub.problem.contestId + '-' + sub.problem.index;\n\n      if (problems[problemId] === undefined) {\n        problems[problemId] = {\n          attempts: 1,\n          solved: 0\n        };\n      } else {\n        if (problems[problemId].solved === 0) problems[problemId].attempts++;\n      }\n\n      if (sub.verdict === 'OK') {\n        problems[problemId].solved++;\n      }\n    }\n\n    var maxAttempt = 0;\n    var maxAc = '';\n    var unsolved = [];\n\n    for (var p in problems) {\n      if (problems[p].solved === 0) unsolved.push(p);\n\n      if (problems[p].attempts > maxAttempt) {\n        maxAttempt = problems[p].attempts;\n      }\n\n      if (problems[p].solved > maxAc) {\n        maxAc = problems[p].solved;\n      }\n    }\n\n    const unsolvedList = unsolved.map(p => {\n      if (p !== undefined) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col s3 m2 l2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: con_url + p.split('-')[0] + '/problem/' + p.split('-')[1],\n          style: {\n            display: \"inline-block\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 59\n          }\n        }, p));\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, unsolved.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row z-depth-2\",\n      style: {\n        padding: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"blanchedalmond\",\n        fontWeight: 500,\n        fontSize: \"18px\",\n        marginLeft: \"50\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Unsolved\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, unsolvedList)));\n  }\n\n}\n\nexport default Contest;","map":{"version":3,"sources":["C:/Users/Ayush/Desktop/codeforces-visualiser/src/Components/contest.js"],"names":["React","Contest","Component","render","best","worst","maxUp","maxDown","con_url","props","user_data","forEach","con","rank","ch","newRating","oldRating","problems","i","data","length","sub","problemId","problem","contestId","index","undefined","attempts","solved","verdict","maxAttempt","maxAc","unsolved","p","push","unsolvedList","map","split","display","padding","color","fontWeight","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nclass Contest extends React.Component{\n\n    render() {\n            var best = 1e10;\n            var worst = -1e10;\n            var maxUp = 0;\n            var maxDown = 0;\n            var con_url = 'https://codeforces.com/contest/';\n            this.props.user_data.forEach(function(con) {\n            if (con.rank < best) {\n              best = con.rank;\n            }\n            if (con.rank > worst) {\n              worst = con.rank;\n            }\n            var ch = con.newRating - con.oldRating;\n            if (ch > maxUp) {\n              maxUp = ch;\n            }\n            if (ch < maxDown) {\n              maxDown = ch;\n            }\n            });\n            var problems = {};\n            for (var i = this.props.data.length - 1; i >= 0; i--) {\n                var sub = this.props.data[i];\n                var problemId = sub.problem.contestId + '-' + sub.problem.index;\n                if (problems[problemId] === undefined) {\n                    problems[problemId] = {\n                        attempts: 1,\n                        solved: 0\n                    };\n                } else {\n                    if (problems[problemId].solved === 0) problems[problemId].attempts++;\n                }\n\n                if (sub.verdict === 'OK') {\n                    problems[problemId].solved++;\n                }\n            }\n                var maxAttempt = 0;\n                var maxAc = '';\n                var unsolved = [];\n                for (var p in problems) {\n                    if (problems[p].solved === 0) unsolved.push(p);\n\n                    if (problems[p].attempts > maxAttempt) {\n                        maxAttempt = problems[p].attempts;\n                    }\n                    if (problems[p].solved > maxAc) {\n                        maxAc = problems[p].solved;\n                    }\n                }\n                const unsolvedList =unsolved.map(p=>{\n                    if(p!==undefined) {\n                        return (\n                            <div className=\"col s3 m2 l2\"><a href={con_url+p.split('-')[0]+'/problem/'+p.split('-')[1]}  style={{display:\"inline-block\"}}>\n                                {p}\n                            </a>\n                            </div>\n                        )\n                    }\n                })\n        return(\n            <div >\n                {unsolved.length>0&&\n                <div className=\"row z-depth-2\" style={{padding:20}}>\n                    <span style={{ color: \"blanchedalmond\",fontWeight: 500,fontSize: \"18px\",marginLeft:\"50\"}}>Unsolved</span>\n                    <div >{unsolvedList}</div>\n                </div>\n                }\n            </div>\n        )\n    }\n\n}\nexport default Contest"]},"metadata":{},"sourceType":"module"}