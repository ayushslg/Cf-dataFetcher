{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush\\\\Desktop\\\\Codeforces\\\\codeforces-visulizer-master\\\\src\\\\Components\\\\Charts\\\\LanguageChart.js\";\nimport React from \"react\";\nimport Chart from \"react-google-charts\";\n\nclass LanguageChart extends React.Component {\n  render() {\n    const lang = {};\n\n    for (var i = 0; i < this.props.data.length; i++) {\n      if (lang[this.props.data[i].programmingLanguage] === undefined) lang[this.props.data[i].programmingLanguage] = 1;else lang[this.props.data[i].programmingLanguage]++;\n    }\n\n    const data = [['Task', 'Stats']];\n\n    for (var x in lang) {\n      data.push([x, lang[x]]);\n    }\n\n    var colors = ['#f44336', '#E91E63', '#9C27B0', '#673AB7', '#2196F3', '#009688', '#8BC34A', '#CDDC39', '#FFC107', '#FF9800', '#FF5722', '#795548', '#607D8B', '#E65100', '#827717', '#004D40', '#1A237E', '#6200EA', '#3F51B5', '#F50057', '#304FFE', '#b71c1c'];\n    var titleTextStyle = {\n      fontSize: 18,\n      color: '#393939',\n      bold: false\n    };\n    const len = this.props.data.length;\n    const title = 'Languages of the ' + this.props.user;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, len > 0 && /*#__PURE__*/React.createElement(Chart, {\n      width: '100%',\n      height: '400px',\n      className: \"col s12 m6 l6 z-depth-2\",\n      chartType: \"PieChart\" // style={{paddingTop:20}}\n      ,\n      data: data,\n      options: {\n        chartArea: {\n          width: '100%',\n          height: '350'\n        },\n        fontName: 'Roboto',\n        title: title,\n        legend: 'none',\n        pieSliceText: 'label',\n        titleTextStyle: titleTextStyle,\n        slices: colors,\n        is3D: true\n      },\n      rootProps: {\n        'data-testid': '3'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default LanguageChart;","map":{"version":3,"sources":["C:/Users/Ayush/Desktop/Codeforces/codeforces-visulizer-master/src/Components/Charts/LanguageChart.js"],"names":["React","Chart","LanguageChart","Component","render","lang","i","props","data","length","programmingLanguage","undefined","x","push","colors","titleTextStyle","fontSize","color","bold","len","title","user","chartArea","width","height","fontName","legend","pieSliceText","slices","is3D"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA2C;AAEvCC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAE,EAAZ;;AAEA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAA9B,EAAqCH,CAAC,EAAtC,EAAyC;AACrC,UAAID,IAAI,CAAC,KAAKE,KAAL,CAAWC,IAAX,CAAgBF,CAAhB,EAAmBI,mBAApB,CAAJ,KAAiDC,SAArD,EACQN,IAAI,CAAC,KAAKE,KAAL,CAAWC,IAAX,CAAgBF,CAAhB,EAAmBI,mBAApB,CAAJ,GAA6C,CAA7C,CADR,KAECL,IAAI,CAAC,KAAKE,KAAL,CAAWC,IAAX,CAAgBF,CAAhB,EAAmBI,mBAApB,CAAJ;AACJ;;AACD,UAAMF,IAAI,GAAG,CAAC,CAAC,MAAD,EAAQ,OAAR,CAAD,CAAb;;AAEA,SAAK,IAAII,CAAT,IAAcP,IAAd,EAAoB;AAChBG,MAAAA,IAAI,CAACK,IAAL,CAAU,CAACD,CAAD,EAAGP,IAAI,CAACO,CAAD,CAAP,CAAV;AACH;;AACD,QAAIE,MAAM,GAAG,CACT,SADS,EAET,SAFS,EAGT,SAHS,EAIT,SAJS,EAKT,SALS,EAMT,SANS,EAOT,SAPS,EAQT,SARS,EAST,SATS,EAUT,SAVS,EAWT,SAXS,EAYT,SAZS,EAaT,SAbS,EAcT,SAdS,EAeT,SAfS,EAgBT,SAhBS,EAiBT,SAjBS,EAkBT,SAlBS,EAmBT,SAnBS,EAoBT,SApBS,EAqBT,SArBS,EAsBT,SAtBS,CAAb;AAwBA,QAAIC,cAAc,GAAG;AACnBC,MAAAA,QAAQ,EAAE,EADS;AAEnBC,MAAAA,KAAK,EAAE,SAFY;AAGnBC,MAAAA,IAAI,EAAE;AAHa,KAArB;AAKA,UAAMC,GAAG,GAAG,KAAKZ,KAAL,CAAWC,IAAX,CAAgBC,MAA5B;AACA,UAAMW,KAAK,GAAG,sBAAoB,KAAKb,KAAL,CAAWc,IAA7C;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCF,GAAG,GAAC,CAAJ,iBACO,oBAAC,KAAD;AACI,MAAA,KAAK,EAAE,MADX;AAEI,MAAA,MAAM,EAAE,OAFZ;AAGI,MAAA,SAAS,EAAC,yBAHd;AAII,MAAA,SAAS,EAAC,UAJd,CAKI;AALJ;AAMI,MAAA,IAAI,EAAIX,IANZ;AAOI,MAAA,OAAO,EAAE;AACLc,QAAAA,SAAS,EAAC;AACVC,UAAAA,KAAK,EAAE,MADG;AAEVC,UAAAA,MAAM,EAAE;AAFE,SADL;AAKLC,QAAAA,QAAQ,EAAE,QALL;AAMLL,QAAAA,KAAK,EAAEA,KANF;AAOLM,QAAAA,MAAM,EAAE,MAPH;AAQLC,QAAAA,YAAY,EAAE,OART;AASLZ,QAAAA,cAAc,EAAEA,cATX;AAULa,QAAAA,MAAM,EAAEd,MAVH;AAWLe,QAAAA,IAAI,EAAE;AAXD,OAPb;AAoBI,MAAA,SAAS,EAAE;AAAC,uBAAe;AAAhB,OApBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CADJ;AA4BH;;AA1EsC;;AA6E3C,eAAe3B,aAAf","sourcesContent":["import React from \"react\";\nimport Chart from \"react-google-charts\";\n\nclass LanguageChart extends React.Component{\n\n    render() {\n        const lang ={\n        }\n        for(var i=0;i<this.props.data.length;i++){\n            if (lang[this.props.data[i].programmingLanguage] === undefined)\n                    lang[this.props.data[i].programmingLanguage]=1\n        else lang[this.props.data[i].programmingLanguage]++;\n        }\n        const data = [['Task','Stats']]\n\n        for (var x in lang) {\n            data.push([x,lang[x]])\n        }\n        var colors = [\n            '#f44336',\n            '#E91E63',\n            '#9C27B0',\n            '#673AB7',\n            '#2196F3',\n            '#009688',\n            '#8BC34A',\n            '#CDDC39',\n            '#FFC107',\n            '#FF9800',\n            '#FF5722',\n            '#795548',\n            '#607D8B',\n            '#E65100',\n            '#827717',\n            '#004D40',\n            '#1A237E',\n            '#6200EA',\n            '#3F51B5',\n            '#F50057',\n            '#304FFE',\n            '#b71c1c'\n          ];\n        var titleTextStyle = {\n          fontSize: 18,\n          color: '#393939',\n          bold: false\n        };\n        const len = this.props.data.length\n        const title = 'Languages of the '+this.props.user;\n        return(\n            <div>\n            {len>0 &&\n                    <Chart\n                        width={'100%'}\n                        height={'400px'}\n                        className=\"col s12 m6 l6 z-depth-2\"\n                        chartType=\"PieChart\"\n                        // style={{paddingTop:20}}\n                        data = {data}\n                        options={{\n                            chartArea:{\n                            width: '100%',\n                            height: '350',\n                            },\n                            fontName: 'Roboto',\n                            title: title,\n                            legend: 'none',\n                            pieSliceText: 'label',\n                            titleTextStyle: titleTextStyle,\n                            slices: colors,\n                            is3D: true,\n                        }}\n                        rootProps={{'data-testid': '3'}}\n                    />\n            }\n            </div>\n        )\n    }\n\n}\nexport default LanguageChart"]},"metadata":{},"sourceType":"module"}